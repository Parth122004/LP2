CURRENCY CONVERTER:


public class CurrencyConverter {
    public Decimal amount { get; set; }
    public String fromCurrency { get; set; }
    public String toCurrency { get; set; }
    public Decimal convertedAmount { get; set; }
    public Boolean showResult { get; set; }

    // Let the currency base be USD
    //Map is a data structure that stores values in key-value pairs
    public Map<String, Decimal> conversionRates = new Map<String, Decimal>{
        'USD' => 1.0,         
        'INR' => 0.012,
        'Pound' => 1.33,
        'Euro' => 1.13,
        'Yen' => 0.0069
    };
        
    public List<SelectOption> getCurrencyOptions() {
        List<SelectOption> options = new List<SelectOption>();
        for (String key : conversionRates.keySet()) {
            options.add(new SelectOption(key, key));
        }
        return options;
    }

    public void convertCurrency(){
        showResult = false;
        if (conversionRates.containsKey(fromCurrency) && conversionRates.containsKey(toCurrency)) {
            Decimal amountInUSD = amount * conversionRates.get(fromCurrency);
            convertedAmount = amountInUSD / conversionRates.get(toCurrency);
            showResult = true;
        }
    }
}

DEb:

CurrencyConverter cc = new CurrencyConverter();
cc.amount = 1;                     // Example amount
cc.fromCurrency = 'USD';            // Convert from USD
cc.toCurrency = 'INR';              // Convert to INR
cc.convertCurrency();               // Perform conversion

System.debug('Converted Amount: ' + cc.convertedAmount); // Output result



UI:

<apex:page controller="CurrencyConverter">
    
    <apex:form >
    	<apex:pageBlock title="Currency Converter">
        	<!-- Input Section -->
            <apex:pageBlockSection columns="2">
         		
                <apex:outputLabel value="From Currency: " />
                <apex:selectList value="{!fromCurrency}">
                    <apex:selectOptions value="{!currencyOptions}"/>
                </apex:selectList>
                
                <apex:outputLabel value="To Currency: " />
            	<apex:selectList value="{!toCurrency}">
                    <apex:selectOptions value="{!currencyOptions}" />
                </apex:selectList>
                
                <apex:outputLabel value="Amount: " />
                <apex:inputText value="{!amount}" />
                
                <apex:outputLabel value="" />
                <apex:commandButton value="Convert!" action="{!convertCurrency}" reRender="resultBlock" />
                
            </apex:pageBlockSection>
        	
            <!-- Output Section -->
            <apex:outputPanel id="resultBlock">
                <apex:outputPanel rendered="{!showResult}">
                    <apex:outputText value="Converted Amount = {!convertedAmount}" />
                </apex:outputPanel>
            </apex:outputPanel>
         
        </apex:pageBlock>
    </apex:form>
    
    
</apex:page>


================================================
public class CurrencyConverterCont { 
    public Decimal amount { get; set; } 
    public String fromCurrency { get; set; } 
    public String toCurrency { get; set; } 
    public Decimal convertedAmount { get; set; } 
     
    // Simple static exchange rates 
    Map<String, Decimal> exchangeRates = new Map<String, Decimal>{ 
        'USD_INR' => 83.0, 
        'EUR_INR' => 90.0, 
        'INR_USD' => 0.012, 
        'INR_EUR' => 0.011, 
        'USD_EUR' => 0.93, 
        'EUR_USD' => 1.07 
    }; 
     
    public List<SelectOption> getCurrencyOptions() { 
        return new List<SelectOption>{ 
            new SelectOption('USD', 'USD'), 
            new SelectOption('INR', 'INR'), 
            new SelectOption('EUR', 'EUR') 
        }; 
    } 
     
    public void convert() { 
        String key = fromCurrency + '_' + toCurrency; 
        if (exchangeRates.containsKey(key)) { 
            Decimal rate = exchangeRates.get(key); 
            convertedAmount = amount * rate; 
        } else if (fromCurrency == toCurrency) { 
            convertedAmount = amount; 
        } else { 
            convertedAmount = null; 
        } 
    } 
} 

//UI:


<apex:page controller="CurrencyConverterCont"> 
    <h2>Currency Converter</h2> 
    <apex:form> 
        <apex:pageBlock title="Convert Currency"> 
            <apex:pageBlockSection> 
                <apex:inputText value="{!amount}" label="Amount"/> 
                 
                <apex:selectList value="{!fromCurrency}" size="1" label="From Currency"> 
                    <apex:selectOptions value="{!currencyOptions}"/> 
                </apex:selectList> 
                 
                <apex:selectList value="{!toCurrency}" size="1" label="To Currency"> 
                    <apex:selectOptions value="{!currencyOptions}"/> 
                </apex:selectList> 
            </apex:pageBlockSection> 
             
            <apex:pageBlockSection> 
                <apex:commandButton value="Convert" action="{!convert}"/> 
            </apex:pageBlockSection> 
             
            <apex:pageBlockSection rendered="{!NOT(ISNULL(convertedAmount))}"> 
                <apex:outputText value="Converted Amount: {!convertedAmount} 
{!toCurrency}"/> 
            </apex:pageBlockSection> 
        </apex:pageBlock> 
    </apex:form> 
</apex:page>


//db:

CurrencyConverterCont cc = new CurrencyConverterCont(); 
cc.amount = 1000; 
cc.fromCurrency = 'USD'; 
cc.toCurrency = 'INR'; 
cc.convert(); 
System.debug('Converted Amount: ' + cc.convertedAmount);

