CALCULATOR :

public class Calculator {
    public Double firstnumber { get; set; }
    public Double secondnumber { get; set; }
    public Double result { get; set; }
    public String operationName { get; set; }


    public List<String> history { get; set; }


    public Calculator() {
        history = new List<String>();
    }


    private void log(String opName, String message) {
        operationName = opName;
        if (result != null)
            history.add(message + ' = ' + result);
        else
            history.add(message + ' = Invalid');
    }


    public void Addition() {
        result = firstnumber + secondnumber;
        
        log('Addition', 'Addition of ' + firstnumber + ' and ' + secondnumber);
    }


    public void Subtraction() {
        result = firstnumber - secondnumber;
        log('Subtraction', 'Subtraction of ' + firstnumber + ' and ' + secondnumber);
    }


    public void Multiplication() {
        result = firstnumber * secondnumber;
        log('Multiplication', 'Multiplication of ' + firstnumber + ' and ' + secondnumber);
    }


    public void Division() {
        result = (secondnumber != 0) ? firstnumber / secondnumber : null;
        log('Division', 'Division of ' + firstnumber + ' by ' + secondnumber);
    }


    public void Modulus() {
        result = Math.mod(firstnumber.intValue(), secondnumber.intValue());
        log('Modulus', 'Modulus of ' + firstnumber + ' % ' + secondnumber);
    }


    public void power() {
        result = Math.pow(firstnumber, secondnumber);
        log('Power', firstnumber + ' ^ ' + secondnumber);
    }


    public void square_root1() {
        result = Math.sqrt(firstnumber);
        log('Square Root', 'Square root of ' + firstnumber);
    }


    public void square_root2() {
        result = Math.sqrt(secondnumber);
        log('Square Root', 'Square root of ' + secondnumber);
    }


    public void square1() {
        result = firstnumber * firstnumber;
        log('Square', 'Square of ' + firstnumber);
    }


    public void square2() {
        result = secondnumber * secondnumber;
        log('Square', 'Square of ' + secondnumber);
    }

    public void reset() {
        firstnumber = null;
        secondnumber = null;
        result = null;
        operationName = null;
        history.clear();
    }
}


DEB:

// Instantiate the Calculator class
Calculator calc = new Calculator();

// Set input values
calc.firstnumber = 10;
calc.secondnumber = 5;

// Perform operations
calc.Addition();
System.debug('Addition Result: ' + calc.result);

calc.Subtraction();
System.debug('Subtraction Result: ' + calc.result);

calc.Multiplication();
System.debug('Multiplication Result: ' + calc.result);

calc.Division();
System.debug('Division Result: ' + calc.result);

calc.Modulus();
System.debug('Modulus Result: ' + calc.result);

calc.power();
System.debug('Power Result: ' + calc.result);

calc.square_root1();
System.debug('Square Root of First Number: ' + calc.result);

calc.square_root2();
System.debug('Square Root of Second Number: ' + calc.result);

calc.square1();
System.debug('Square of First Number: ' + calc.result);

calc.square2();
System.debug('Square of Second Number: ' + calc.result);

// Print Operation History
System.debug('--- Operation History ---');
for (String logEntry : calc.history) {
    System.debug(logEntry);
}




UI:

<apex:page controller="Calculator">
    <apex:form>

        <apex:sectionHeader title="Scientific Calculator" subtitle="With All Operations" />

        <apex:pageBlock title="Calculator">

            <!-- Input Fields -->
            <apex:pageBlockSection id="inputs">
                <apex:inputText label="First Number" value="{!firstnumber}" />
                <apex:inputText label="Second Number" value="{!secondnumber}" />
                <apex:outputText label="Operation" value="{!operationName}" id="op" style="color:blue;" />
                <apex:outputText label="Result" value="{!result}" id="res" style="font-weight: bold;" />
            </apex:pageBlockSection>

            <!-- Basic Operations -->
            <apex:pageBlockSection title="Basic Operations" columns="3">
                <apex:commandButton value="Addition" action="{!Addition}" reRender="res,op,history" />
                <apex:commandButton value="Subtraction" action="{!Subtraction}" reRender="res,op,history" />
                <apex:commandButton value="Multiplication" action="{!Multiplication}" reRender="res,op,history" />
                <apex:commandButton value="Division" action="{!Division}" reRender="res,op,history" />
                <apex:commandButton value="Modulus" action="{!Modulus}" reRender="res,op,history" />
                <apex:commandButton value="Power" action="{!power}" reRender="res,op,history" />
            </apex:pageBlockSection>

            <!-- Advanced Math -->
            <apex:pageBlockSection title="Square and Roots" columns="3">
                <apex:commandButton value="Square of Num1" action="{!square1}" reRender="res,op,history" />
                <apex:commandButton value="Square of Num2" action="{!square2}" reRender="res,op,history" />
                <apex:commandButton value="Sqrt of Num1" action="{!square_root1}" reRender="res,op,history" />
                <apex:commandButton value="Sqrt of Num2" action="{!square_root2}" reRender="res,op,history" />
            </apex:pageBlockSection>

            <!-- History -->
            <apex:pageBlockSection title="Operation History" id="history">
                <apex:repeat value="{!history}" var="h">
                    <div style="margin: 3px 0;">â€¢ {!h}</div>
                </apex:repeat>
            </apex:pageBlockSection>

        </apex:pageBlock>

        <!-- Reset Button -->
        <div style="margin-top: 15px; margin-left: 25px">
            <apex:commandButton value="Reset" action="{!reset}" reRender="inputs,res,op,history" />
        </div>

    </apex:form>
</apex:page>


======================================================================


public class ScientificCalculatorCont { 
    public Decimal num1 { get; set; } 
    public Decimal num2 { get; set; } 
    public String operation { get; set; } 
    public Decimal result { get; set; } 
    public String errorMessage { get; set; } 
 
    public void calculate() { 
        try { 
            if (operation == 'Addition') { 
                result = num1 + num2; 
            } else if (operation == 'Subtraction') { 
                result = num1 - num2; 
            } else if (operation == 'Multiplication') { 
                result = num1 * num2; 
            } else if (operation == 'Division') { 
                if (num2 == 0) { 
                    errorMessage = 'Error: Division by zero is not allowed.'; 
                    return; 
                } 
                result = num1 / num2; 
            } else if (operation == 'SquareRoot') { 
                if (num1 < 0) { 
                    errorMessage = 'Error: Cannot take the square root of a negative number.'; 
                    return; 
                } 
                result = Math.sqrt(num1); 
            } else if (operation == 'Power') { 
                // Use Double to handle power operation 
                result = (Decimal) Math.pow((Double) num1, (Double) num2); 
            } else if (operation == 'Sine') { 
                result = Math.sin((Double) num1); 
            } else if (operation == 'Cosine') { 
                result = Math.cos((Double) num1); 
            } else if (operation == 'Tangent') { 
                result = Math.tan((Double) num1); 
            } else if (operation == 'Log') { 
                if (num1 <= 0) { 
                    errorMessage = 'Error: Logarithm undefined for non-positive numbers.'; 
                    return; 
                } 
result = Math.log((Double) num1); 
} else { 
errorMessage = 'Invalid operation'; 
} 
} catch (Exception e) { 
errorMessage = 'Error: ' + e.getMessage(); 
} 
} 
}

//ui:

<apex:page controller="ScientificCalculatorCont"> 
    <h2>Scientific Calculator</h2> 
    <apex:form > 
        <apex:pageBlock title="Enter Values"> 
            <apex:pageBlockSection > 
                <apex:inputText value="{!num1}" label="Enter First Number" /> 
                <apex:inputText value="{!num2}" label="Enter Second Number (if applicable)" /> 
                <apex:selectList value="{!operation}" size="1"> 
                    <apex:selectOption itemLabel="Select Operation" itemValue="" /> 
                    <apex:selectOption itemLabel="Addition" itemValue="Addition" /> 
                    <apex:selectOption itemLabel="Subtraction" itemValue="Subtraction" /> 
                    <apex:selectOption itemLabel="Multiplication" itemValue="Multiplication" /> 
                    <apex:selectOption itemLabel="Division" itemValue="Division" /> 
                    <apex:selectOption itemLabel="Square Root" itemValue="SquareRoot" /> 
                    <apex:selectOption itemLabel="Power" itemValue="Power" /> 
                    <apex:selectOption itemLabel="Sine" itemValue="Sine" /> 
                    <apex:selectOption itemLabel="Cosine" itemValue="Cosine" /> 
                    <apex:selectOption itemLabel="Tangent" itemValue="Tangent" /> 
                    <apex:selectOption itemLabel="Logarithm" itemValue="Log" /> 
                </apex:selectList> 
            </apex:pageBlockSection> 
 
            <apex:pageBlockSection > 
                <apex:commandButton value="Calculate" action="{!calculate}" 
rerender="resultSection"/> 
            </apex:pageBlockSection> 
 
            <apex:pageBlockSection id="resultSection"> 
                <apex:outputPanel rendered="{!NOT(ISBLANK(errorMessage))}"> 
                    <apex:outputText value="{!errorMessage}" style="color: red;" /> 
                </apex:outputPanel> 
 
                <apex:outputPanel rendered="{!NOT(ISBLANK(result))}"> 
                    <apex:outputLabel value="Result: " /> 
                    <apex:outputText value="{!result}" /> 
                </apex:outputPanel> 
            </apex:pageBlockSection> 
        </apex:pageBlock> 
    </apex:form> 
</apex:page> 

//db:

// Create an instance of the ScientificCalculatorCont class 
ScientificCalculatorCont calculator = new ScientificCalculatorCont(); 
// Test for Addition 
calculator.num1 = 10; 
calculator.num2 = 5; 
calculator.operation = 'Addition'; 
calculator.calculate(); 
System.debug('Result of Addition: ' + calculator.result);  // Expected: 15 
// Test for Subtraction 
calculator.operation = 'Subtraction'; 
calculator.calculate(); 
System.debug('Result of Subtraction: ' + calculator.result);  // Expected: 5 
// Test for Multiplication 
calculator.operation = 'Multiplication'; 
calculator.calculate(); 
System.debug('Result of Multiplication: ' + calculator.result);  // Expected: 50 
// Test for Division 
calculator.operation = 'Division'; 
calculator.calculate(); 
System.debug('Result of Division: ' + calculator.result);  // Expected: 2 
// Test for Square Root 
calculator.num1 = 16; 
calculator.operation = 'SquareRoot'; 
calculator.calculate(); 
System.debug('Result of Square Root: ' + calculator.result);  // Expected: 4 
// Test for Power 
calculator.num1 = 2; 
calculator.num2 = 3; 
calculator.operation = 'Power'; 
calculator.calculate(); 
System.debug('Result of Power: ' + calculator.result);  // Expected: 8 
// Test for Sine (in radians) 
calculator.num1 = 3.14159 / 2; // Pi/2 
calculator.operation = 'Sine'; 
calculator.calculate(); 
System.debug('Result of Sine: ' + calculator.result);  // Expected: 1 
// Test for Cosine (in radians) 
calculator.operation = 'Cosine'; 
calculator.calculate(); 
System.debug('Result of Cosine: ' + calculator.result);  // Expected: 0 
// Test for Tangent (in radians) 
calculator.operation = 'Tangent'; 
calculator.calculate(); 
System.debug('Result of Tangent: ' + calculator.result);  // Expected: Undefined or some 
value based on angle 
// Test for Logarithm 
calculator.num1 = 10; 
calculator.operation = 'Log'; 
calculator.calculate(); 
System.debug('Result of Logarithm: ' + calculator.result);  // Expected: log(10) ~ 
2.302585







